clear;clc;close all;
%%
x0 = [0,0];
xT = [5,5];
bd = [0,0;5,5];
delta = 0.1;
dm = 2;
G = {
    @(x1,x2) x1^2 - (21*x1)/5 + x2^2 - (36*x2)/5 + 8641/500,...
    @(x1,x2) (x1^2 - (21*x1)/5 + x2^2 - (36*x2)/5 + 8641/500)^2 - (1-delta)*(x1^4 - (42*x1^3)/5 + 2*x1^2*x2^2 - (72*x1^2*x2)/5 + (6526*x1^2)/125 - (42*x1*x2^2)/5 + (1512*x1*x2)/25 - (90741*x1)/625 + x2^4 - (72*x2^3)/5 + (10801*x2^2)/125 - (155556*x2)/625 + 5510725131921722910785423357/18446744073709551616000000)...
    @(x1,x2) x1^2 + x2^2 - 3*x2 + 1081/500,...
    @(x1,x2) (x1^2 + x2^2 - 3*x2 + 1081/500)^2 - (1-delta)*(x1^4 + 2*x1^2*x2^2 - 6*x1^2*x2 + (541*x1^2)/125 + x2^4 - 6*x2^3 + (1666*x2^2)/125 - (1623*x2)/125 + 86390677289712110186547197/18446744073709551616000000),...
    @(x1,x2) x1^2 - 4*x1 + x2^2 - (27*x2)/5 + 5601/500,...
    @(x1,x2) (x1^2 - 4*x1 + x2^2 - (27*x2)/5 + 5601/500)^2 - (1-delta)*(x1^4 - 8*x1^3 + 2*x1^2*x2^2 - (54*x1^2*x2)/5 + (4801*x1^2)/125 - 8*x1*x2^2 + (216*x1*x2)/5 - (11204*x1)/125 + x2^4 - (54*x2^3)/5 + (6446*x2^2)/125 - (75627*x2)/625 + 2315619193276949655650846717/18446744073709551616000000),...
    @(x1,x2) x1^2 - (9*x1)/5 + x2^2 - (17*x2)/5 + 903/250,...
    @(x1,x2) (x1^2 - (9*x1)/5 + x2^2 - (17*x2)/5 + 903/250)^2 - (1-delta)*(x1^4 - (18*x1^3)/5 + 2*x1^2*x2^2 - (34*x1^2*x2)/5 + (2617*x1^2)/250 - (18*x1*x2^2)/5 + (306*x1*x2)/25 - (16263*x1)/1250 + x2^4 - (34*x2^3)/5 + (4697*x2^2)/250 - (30719*x2)/1250 + 240939343813658104580556797/18446744073709551616000000),...
    @(x1,x2) x1^2 - 2*x1 + x2^2 - (44*x2)/5 + 2534/125,...
    @(x1,x2) (x1^2 - 2*x1 + x2^2 - (44*x2)/5 + 2534/125)^2 - (1-delta)*(x1^4 - 4*x1^3 + 2*x1^2*x2^2 - (88*x1^2*x2)/5 + (11137*x1^2)/250 - 4*x1*x2^2 + (176*x1*x2)/5 - (10137*x1)/125 + x2^4 - (88*x2^3)/5 + (29497*x2^2)/250 - (223014*x2)/625 + 7582265345543669096170670077/18446744073709551616000000),...
    @(x1,x2) x1^2 - (48*x1)/5 + x2^2 - (27*x2)/5 + 15121/500,...
    @(x1,x2) (x1^2 - (48*x1)/5 + x2^2 - (27*x2)/5 + 15121/500)^2 - (1-delta)*(x1^4 - (96*x1^3)/5 + 2*x1^2*x2^2 - (54*x1^2*x2)/5 + (19081*x1^2)/125 - (96*x1*x2^2)/5 + (2592*x1*x2)/25 - (362928*x1)/625 + x2^4 - (54*x2^3)/5 + (11206*x2^2)/125 - (204147*x2)/625 + 16873234738186790607685437437/18446744073709551616000000),...
    @(x1,x2) x1^2 - 6*x1 + x2^2 - 6*x2 + 2239/125,...
    @(x1,x2) (x1^2 - 6*x1 + x2^2 - 6*x2 + 2239/125)^2 - (1-delta)*(x1^4 - 12*x1^3 + 2*x1^2*x2^2 - 12*x1^2*x2 + (17957*x1^2)/250 - 12*x1*x2^2 + 72*x1*x2 - (26871*x1)/125 + x2^4 - 12*x2^3 + (17957*x2^2)/250 - (26871*x2)/125 + 5919776885602773053386803197/18446744073709551616000000),...
    @(x1,x2) x1^2 - 6*x1 + x2^2 - 4*x2 + 1614/125,...
    @(x1,x2) (x1^2 - 6*x1 + x2^2 - 4*x2 + 1614/125)^2 - (1-delta)*(x1^4 - 12*x1^3 + 2*x1^2*x2^2 - 8*x1^2*x2 + (15457*x1^2)/250 - 12*x1*x2^2 + 48*x1*x2 - (19371*x1)/125 + x2^4 - 8*x2^3 + (10457*x2^2)/250 - (12914*x2)/125 + 3076395754081182767296563197/18446744073709551616000000),...
};
random_seed = 5;
width = 0.1:0.5:5;
number_of_samples_per_stripe = 10;
improve_rrt = 1; % 1: looks for optimal, 0: feasible path
[V, E, path] = RRT_SOS_Static(dm, G, x0, xT, bd, improve_rrt, random_seed, width, number_of_samples_per_stripe);

%% Plots
figure(1)% obtaind path
hold on
for i=1:length(path)-1
    va = int64(path(i));
    vb = int64(path(i+1));
    plot([V(va,1),V(vb,1)], [V(va,2),V(vb,2)], 'LineWidth',2,'Color','r');
end

%%
%% plot RRT tree
figure(1)
hold on
for i=1:size(E,1)
    e = E(i,:);
    a = V(int64(e(1)),:);
    b = V(int64(e(2)),:);
    plot([a(1),b(1)],[a(2),b(2)],'b');
end
plot(x0(1),x0(2),'s','LineWidth',2,'MarkerSize',10,'MarkerEdgeColor','k','MarkerFaceColor','b'); 
plot(xT(1),xT(2),'^','LineWidth',2,'MarkerSize',10,'MarkerEdgeColor','k','MarkerFaceColor','b'); 

%% plot Risk Contour of obstacles
C0 = [ % nominal center of the obstacles
[2.1000    3.6000];
[0    1.5000];
[2.0000    2.7000];
[0.9000    1.7000];
[1.0000    4.4000];
[4.8000    2.7000];
[3.0000    3.0000];
[3.0000    2.0000];
[2.1000    3.6000];
];


for i=1:size(C0,1)
    syms x1 x2 w v
    r=0.3;c0 = C0(i,:);
    g=r^2-sum(([x1 x2] - (c0+[w v])).^2);
    dg=polynomialDegree(g);
    % w: uncertain parameter w~Normal(mu, var)
    mu = 0;var = 0.001;
    for k=0:2*dg; m_w(k+1,1)=sqrt(var)^k*(-j*sqrt(2))^k*kummerU(-k/2, 1/2,-1/2*mu^2/var);end

    Mg=[]; %list of moment of z
    for dd=1:2
    % Moment of order d of z=g(x)
    Md=expand(g^dd);
    % replace moments of Uncertain Parameter w
    Md1=subs(Md,flip(w.^[1:dd*dg].'),flip(m_w(2:dd*dg+1))) ; 
    Md2=subs(Md1,flip(v.^[1:dd*dg].'),flip(m_w(2:dd*dg+1))) ; 
    Mg=[Mg;Md2];
    end
    Cons_1=(Mg(2)-Mg(1)^2)/Mg(2); 
    Cons_2=Mg(1); % <=0
    
    [x1,x2]=meshgrid([0:0.01:5],[0:0.01:5]);
    contour(x1,x2,eval(Cons_2),[0 0],'--b','Linewidth',1,'ShowText','on','DisplayName','(E[g^2]-E^2[g])/E[g^2]<Delta'); hold on
    contour(x1,x2,eval(Cons_1),[delta delta],'r','Linewidth',1,'ShowText','on','DisplayName','(E[g^2]-E^2[g])/E[g^2]<Delta'); hold on
end
for i=1:length(path)-1
    va = int64(path(i));
    vb = int64(path(i+1));
    plot([V(va,1),V(vb,1)], [V(va,2),V(vb,2)], 'LineWidth',2,'Color','r');
end


